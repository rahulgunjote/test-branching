name: Release Build

on:
  push:
    branches: [ releases/* ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

env:
  GITHUB_PULL_REQUEST_API_TOKEN: ${{ secrets.PULL_REQUEST_API_TOKEN }}
  X_SCHEME: ${{ vars.X_SCHEME }}
  X_PROJ_DIR: ${{ vars.X_PROJ_DIR }}
  X_WORKSPACE_DIR: ${{ vars.X_WORKSPACE_DIR }}

jobs:
  # test:
  #   name: Test
  #   runs-on: macos-latest
    
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4
      
  #   - name: Setup Ruby
  #     uses: ruby/setup-ruby@v1
  #     with:
  #       ruby-version: '3.2'
  #       bundler-cache: true
        
  #   - name: Setup Xcode
  #     uses: maxim-lobanov/setup-xcode@v1
  #     with:
  #       xcode-version: latest-stable
        
  #   - name: Install dependencies
  #     run: |
  #       bundle install
        
  #   - name: Run tests
  #     run: |
  #       bundle exec fastlane test
        
  # build:
  #   name: Build
  #   runs-on: macos-latest
  #   # needs: test
    
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4
  #     with:
  #       token: ${{ secrets.GITHUB_TOKEN }}
  #   - name: Setup Ruby
  #     uses: ruby/setup-ruby@v1
  #     with:
  #       ruby-version: '3.2'
  #       bundler-cache: true
        
  #   - name: Setup Xcode
  #     uses: maxim-lobanov/setup-xcode@v1
  #     with:
  #       xcode-version: latest-stable

  #   - name: Install dependencies
  #     run: |
  #       bundle install
        
  #   - name: Build app
  #     run: |
  #       bundle exec fastlane build
        
  #   - name: Upload build artifacts
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: ios-build
  #       path: build/
 
  release:
    name: Release
    runs-on: macos-latest
    # needs: build
    
    steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            fetch-depth: 0
            
        - name: Setup Ruby
          uses: ruby/setup-ruby@v1
          with:
            ruby-version: '3.2'
            bundler-cache: true
            
        - name: Install dependencies
          run: |
            bundle install
        
        - name: Get triggering commits
          id: get_commits
          run: |
            if [ "${{ github.event_name }}" = "push" ]; then
              # For push events, get commits from the push
              COMMITS=$(echo '${{ toJson(github.event.commits) }}' | jq -r '.[].id' | tr '\n' ',' | sed 's/,$//')
            else
              # For workflow_dispatch, get the latest commit
              COMMITS=$(git rev-parse HEAD)
            fi
            echo "commits=$COMMITS" >> $GITHUB_OUTPUT
            echo "Triggering commits: $COMMITS"
        
        - name: Create pull request
          env:
            TRIGGER_COMMITS: ${{ steps.get_commits.outputs.commits }}
          run: |
            bundle exec fastlane create_pr_from_release_branch_v2
    
          
    